Env(name="bedtools", base="bioconda", packages="bedtools")

with Stage("gtf2fasta") as S:
  S.doc("""
  """)

  rule bedtools_getfasta:
    """Uses bedtools getfasta to filter an assembled fasta file according to hits in a gtf file."""
    message:
        "FIXME"
    input:
        fasta = "{:prev:}/{:target:}.fasta.gz",
        gtf = "{:prev:}/{:target:}.gtf"
    output:
        "{:this:}/{target}.fasta.gz"
    conda:
        "bedtools"
    shadow:
        "shallow"
    shell: """
    gunzip -c {input.fasta} > tmpfile
    bedtools getfasta \
    -fi tmpfile \
    -bed {input.gtf} \
    -fo outfile
    gzip -c outfile > {output}
    """

  rule bedtools_getfasta_all:
    message:
     "Bedtools: getfasta done"
    input:
     "{:this:}/{:targets:}.fasta.gz"
    output:
     touch("{:this:}/all")

with Stage("count_gtf") as S:
  rule bedtools_coverage:
      message:
          "Bedtools: calculating coverage for {wildcards.target}"
      input:
          gtf = "{:prev:}/{:target:}.gtf",
          bam = "{:prev:}/{:target:}.sorted.bam"
      output:
          "{:this:}/{target}.counts.tsv"
      conda:
          "bedtools"
      shell: """
      bedtools coverage -a {input.gtf} -b {input.bam} | \
      awk '
      BEGIN {{print "name\tlength\tcount"}}
      {{print $1 ":" $4 "." $5 "\t" $11 "\t" $10}}
      ' \
      > {output}
      """

  rule bedtools_coverage_all:
      message:
          "Bedtools: coverage done"
      input:
          "{:this:}/{:targets:}.counts.tsv"
      output:
          touch("{:this:}/all")
